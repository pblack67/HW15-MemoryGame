{"version":3,"sources":["components/MemoryTile/index.js","components/Wrapper/index.js","components/Score/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","alt","src","image","onClick","clickHandler","id","Wrapper","children","Score","Fragment","score","message","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","tiles","friendid","clickedTile","find","friend","clicked","setState","forEach","newScore","shuffled","cards","newCards","i","length","index1","Math","floor","random","index2","swap","shuffleCards","_this2","components_Score","components_Wrapper","map","MemoryTile","key","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"qvDAaiBA,MAVjB,SAAoBC,GAChB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAK,SAAUC,IAAKN,EAAMO,MAAOC,QAAS,WAAOR,EAAMS,aAAaT,EAAMU,gBCA1EC,MAJf,SAAiBX,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMY,iBCQ1BC,MATf,SAAeb,GACb,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAY,SAAA,KACEb,EAAAC,EAAAC,cAAA,MAAIC,UAAW,0BAAf,SAAgDJ,EAAMe,OACtDd,EAAAC,EAAAC,cAAA,MAAIC,UAAW,0BAA2BJ,EAAMgB,4BCgEvCC,cA7Cb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAPFI,MAAQ,CACNC,QACAX,MAAO,EACPC,QAAS,4BAGGE,EAKdT,aAAe,SAAAkB,GACb,IAAIC,EAAcV,EAAKO,MAAMC,MAAMG,KAAK,SAAAC,GAAM,OAAIA,EAAOpB,KAAOiB,IAChE,GAAIC,EAAYG,QACdb,EAAKc,SAAS,CAAEjB,MAAO,IACvBG,EAAKc,SAAS,CAAEhB,QAAS,0CACzBU,EAAMO,QAAQ,SAAAH,GAAM,OAAKA,EAAOC,SAAU,QACrC,CACLH,EAAYG,SAAU,EACtB,IAAIG,EAAWhB,EAAKO,MAAMV,MAAQ,EAClCG,EAAKc,SAAS,CAAEjB,MAAOmB,IACvBhB,EAAKc,SAAS,CAAEhB,QAAS,iCAE3B,IAAImB,EApCR,SAAsBC,GAEpB,IADA,IAAIC,EAAWD,EACNE,EAAI,EAAGA,EAAmB,EAAfF,EAAMG,OAAYD,IAAK,CACzC,IAAIE,EAASC,KAAKC,MAAMD,KAAKE,SAAWP,EAAMG,QAC1CK,EAASH,KAAKC,MAAMD,KAAKE,SAAWP,EAAMG,QAC1CM,EAAOT,EAAMI,GACjBJ,EAAMI,GAAUJ,EAAMQ,GACtBR,EAAMQ,GAAUC,EAElB,OAAOR,EA2BUS,CAAa5B,EAAKO,MAAMC,OACvCR,EAAKc,SAAS,CAAEN,MAAOS,KAhBvBT,EAAMO,QAAQ,SAAAH,GAAM,OAAKA,EAAOC,SAAU,IAF9Bb,wEAqBL,IAAA6B,EAAA1B,KACP,OACEpB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAY,SAAA,KACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,yBACAH,EAAAC,EAAAC,cAAC6C,EAAD,CAAOjC,MAAOM,KAAKI,MAAMV,MAAOC,QAASK,KAAKI,MAAMT,WAEtDf,EAAAC,EAAAC,cAAC8C,EAAD,KACG5B,KAAKI,MAAMC,MAAMwB,IAAI,SAAApB,GACpB,OACE7B,EAAAC,EAAAC,cAACgD,EAAD,CACE5C,MAAOuB,EAAOvB,MACd6C,IAAKtB,EAAOpB,GACZA,GAAIoB,EAAOpB,GACXD,aAAcsC,EAAKtC,0BA1CjB4C,IAAMC,iBCdxBC,IAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.23f084af.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction FriendCard(props) {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"img-container\">\r\n          <img alt={\"Whoops\"} src={props.image} onClick={() => {props.clickHandler(props.id)}}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default FriendCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Score(props) {\r\n  return (\r\n    <>\r\n      <h4 className={\"text-white text-center\"}>Score {props.score}</h4>\r\n      <h4 className={\"text-white text-center\"}>{props.message}</h4>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Score;\r\n","import React from \"react\";\r\nimport MemoryTile from \"./components/MemoryTile\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Score from \"./components/Score\";\r\nimport tiles from \"./tiles.json\";\r\nimport \"./App.css\";\r\n\r\nfunction shuffleCards(cards) {\r\n  let newCards = cards;\r\n  for (let i = 0; i < cards.length * 2; i++) {\r\n    let index1 = Math.floor(Math.random() * cards.length);\r\n    let index2 = Math.floor(Math.random() * cards.length);\r\n    let swap = cards[index1];\r\n    cards[index1] = cards[index2];\r\n    cards[index2] = swap;\r\n  }\r\n  return newCards;\r\n}\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    tiles,\r\n    score: 0,\r\n    message: \"Click any tile to start!\"\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    tiles.forEach(friend => (friend.clicked = false));\r\n  }\r\n\r\n  clickHandler = friendid => {\r\n    let clickedTile = this.state.tiles.find(friend => friend.id === friendid);\r\n    if (clickedTile.clicked) {\r\n      this.setState({ score: 0 });\r\n      this.setState({ message: \"Augh! You already clicked that one!!!\" });\r\n      tiles.forEach(friend => (friend.clicked = false));\r\n    } else {\r\n      clickedTile.clicked = true;\r\n      let newScore = this.state.score + 1;\r\n      this.setState({ score: newScore });\r\n      this.setState({ message: \"Whew! You have a good memory\" });\r\n    }\r\n    let shuffled = shuffleCards(this.state.tiles);\r\n    this.setState({ tiles: shuffled });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"top\">\r\n          <h1 className=\"title\">Star Trek Memory Game</h1>\r\n          <Score score={this.state.score} message={this.state.message} />\r\n        </div>\r\n        <Wrapper>\r\n          {this.state.tiles.map(friend => {\r\n            return (\r\n              <MemoryTile\r\n                image={friend.image}\r\n                key={friend.id}\r\n                id={friend.id}\r\n                clickHandler={this.clickHandler}\r\n              />\r\n            );\r\n          })}\r\n        </Wrapper>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}